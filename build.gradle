/*
 * Licensed to Miguel Arregui ("marregui") under one or more contributor
 * license agreements. See the LICENSE file distributed with this work
 * for additional information regarding copyright ownership. You may
 * obtain a copy at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
 * License for the specific language governing permissions and limitations
 * under the License.
 *
 * Copyright 2020, Miguel Arregui a.k.a. marregui
 */

plugins {
    id 'java'
    id 'idea'
    id 'application'
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

application {
    mainClassName = "marregui.plot.SequenceViewer"
}

repositories {
    mavenCentral()
}

group = "marregui.lcv"
version = '1.0.0-SNAPSHOT'
description = "Sequence data display"

dependencies {
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.13.0'
    implementation 'org.apache.commons:commons-compress:1.20'

    testImplementation 'org.junit.jupiter:junit-jupiter:5.6.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.6.2'
    testRuntimeOnly 'org.junit.platform:junit-platform-commons:1.7.0'
    testImplementation 'org.hamcrest:hamcrest:2.2'
    testImplementation 'org.mockito:mockito-core:3.5.10'
}

jar {
    manifest {
        attributes "Main-Class": "marregui.plot.SequenceViewer"
    }

    from {
        configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

task fatJar(type: Jar) {
    manifest.from jar.manifest
    archiveClassifier.set('all')
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    } {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
    with jar
}

artifacts {
    archives fatJar
}

test {
    useJUnitPlatform()
}

wrapper {
    gradleVersion = '7.0'
}